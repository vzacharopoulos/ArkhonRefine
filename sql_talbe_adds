for 
 ,[start_date_datetime]
	  ,[finish_date_datetime]
	  ,[est_date_of_prod_datetime]




UPDATE [PanelMESDB].[dbo].[PPORDERS]
SET [start_date_datetime] = CAST([start_date] AS DATETIME)


UPDATE [PanelMESDB].[dbo].[PPORDERS]
SET [finish_date_datetime] = CAST([finish_date] AS DATETIME)

ALTER TABLE [PanelMESDB_testing].[dbo].[PPORDERS]
ADD [start_datetime] DATETIME;

UPDATE [PanelMESDB_testing].[dbo].[PPORDERS]
SET [start_datetime] = CAST([start_date] AS DATETIME);
CREATE OR ALTER VIEW [dbo].[Masterlength] AS
SELECT 
    po.id,
    pl.PPORDERNO AS PPORDERNO, 
    ppe.code AS code, 
    SUM(ppe.ttm) AS totalMeter,
    po.start_date_datetime,
    po.finish_date_datetime,
    po.create_date,
    po.status,
    -- New columns added:
	   previd ,      -- Code for the current panel
    po.prevpanelcode  ,     -- Code for the next panel
    po.offtimeduration ,                  -- Duration in some unit
    po.offtimestartdate ,                 -- Start date and time
   po.offtimeenddate  ,
    po.pauseduration,
    po.pausestartdate,
    po.pauseenddate

FROM dbo.PPORDERLINES2 pl
INNER JOIN [192.168.10.167].panel.dbo.PanelProductionOrdersExt ppe
    ON ppe.ProdOrder = pl.CUSTPORDERNO COLLATE SQL_Latin1_General_CP1_CI_AS
INNER JOIN dbo.PPORDERS po
    ON po.PPORDERNO = pl.PPORDERNO
GROUP BY 
    pl.PPORDERNO,
    ppe.code, 
    po.finish_date_datetime, 
    po.start_date_datetime,
    po.create_date,
    po.status,
    po.id,
    -- Added new columns to GROUP BY:
		   previd ,      -- Code for the current panel
    po.prevpanelcode  ,     -- Code for the next panel
    po.offtimeduration ,                  -- Duration in some unit
    po.offtimestartdate ,                 -- Start date and time
    po.offtimeenddate  ,
    po.pauseduration,
    po.pausestartdate,
    po.pauseenddate;


    
USE [PanelMESDB_testing]
GO

ALTER TABLE [dbo].[PPORDERS]
ADD 
    [est_start_date] DATETIME NULL,
    [est_finish_date] DATETIME NULL
GO



ALTER TABLE PPORDERS
ADD 
    previd int,      -- Code for the current panel
    prevpanelcode NVARCHAR(150) NULL,          -- Code for the next panel
    offtimeduration INT NULL,                         -- Duration in some unit
    offtimestartdate DATETIME NULL,                   -- Start date and time
    offtimeenddate DATETIME NULL;    
        pauseduration INT NULL,                         -- Duration in some unit
    pausestartdate DATETIME NULL,                   -- Start date and time
    pauseenddate DATETIME NULL;  

    CREATE TABLE WorkingHours (
    [Date] DATE PRIMARY KEY,       -- Unique working hours per date
    StartHour INT NOT NULL,        -- e.g., 9
    StartMinute INT NOT NULL,      -- e.g., 0
    EndHour INT NOT NULL,          -- e.g., 17
    EndMinute INT NOT NULL,        -- e.g., 30
    IsWorkingDay BIT NOT NULL      -- 1 for working, 0 for not
);





CREATE TABLE [PanelMESDB_testing].[dbo].[PanelMachinePauses] (
    [id] INT IDENTITY(1,1) PRIMARY KEY,
    [pporderid] INT NOT NULL,
    [pausestartdate] DATETIME NOT NULL,
    [pauseenddate] DATETIME NULL,
    [pauseduration] int null,
	[pausecomment] nvarchar (100)
    
    CONSTRAINT [FK_PanelMachinePauses_PPORDERS] FOREIGN KEY ([pporderid]) 
        REFERENCES [dbo].[PPORDERS]([id])
);



ALTER TABLE Users 
ALTER COLUMN user_id NVARCHAR(50) NOT NULL;




UPDATE Users 
SET user_id = 'chris1' 
WHERE id = 28;

UPDATE Users 
SET user_id = 'gia' 
WHERE id = 32;

UPDATE Users 
SET password = 'gia' 
WHERE id = 32;

UPDATE Users 
SET user_id = 'nzacharo' 
WHERE id = 7;

UPDATE Users 
SET password = 'nzacharo' 
WHERE id = 7;

ALTER TABLE Users 
ADD CONSTRAINT PK_Users PRIMARY KEY (user_id);


CREATE TABLE UserLocationAccess (
    user_id NVARCHAR(50) NOT NULL,
    location_id INT NOT NULL,
    IsActive BIT DEFAULT 1,
    
    PRIMARY KEY (user_id, location_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (location_id) REFERENCES Location(id) ON DELETE CASCADE
);

VALUES ('vas', 0, 1); 
VALUES ('vas', 1, 1); 
VALUES ('vas', 1, 1);
VALUES ('vas', 2, 1);
VALUES (vas, 3, 1);
VALUES (vas, 4, 1);
VALUES (vas, 5, 1);
VALUES (vas, 6, 1);
VALUES (vas, 7, 1);
VALUES (vas, 8, 1);
VALUES (vas, 9, 1);
VALUES (vas, 10, 1);
VALUES (vas, 11, 1);
VALUES (vas, 12, 1);
VALUES (vas, 13, 1);